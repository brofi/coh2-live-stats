name: CI

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:

  lint:
    name: lint ${{ matrix.python-version }}
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: create virtual environment
        run: |
          python -m venv --without-pip .venv
          python -m venv --upgrade-deps --upgrade .venv
      - name: activate virtual environment
        run: python -c "from scripts.github_actions.activate import run; run()"
      - name: install dependencies
        run: python -m pip install ruff
      - name: run lint
        run: python -m ruff check

  type-check:
    name: type-check ${{ matrix.python-version }}
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: create virtual environment
        run: |
          python -m venv --without-pip .venv
          python -m venv --upgrade-deps --upgrade .venv
      - name: activate virtual environment
        run: python -c "from scripts.github_actions.activate import run; run()"
      - name: install dependencies
        # See: https://github.com/python/mypy/issues/10600
        run: python -m pip install .[build] types-colorama types-pyinstaller
      - name: run mypy
        run: python -m mypy src tests scripts tasks.py

  test:
    name: test ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest']
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4
      - name: set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: create virtual environment
        run: |
          python -m venv --without-pip .venv
          python -m venv --upgrade-deps --upgrade .venv
      - name: activate virtual environment
        run: python -c "from scripts.github_actions.activate import run; run()"
      - name: install dependencies
        run: python -m pip install .[build]
      - name: mock log file
        run: python -c "from scripts.github_actions.mock_logfile import run; run()"
      - name: run pytest
        run: python -m pytest --verbose -s
